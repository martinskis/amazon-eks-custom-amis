{

  "variables": {
    "aws_region": "",

    "k8s_version": "",
    "k8s_build_date": "",
    "cni_version": "",
    "cni_plugin_version": "",

    "ami_name": "centos7",
    "ami_description": "An EKS base image based on CentOS 7 Build Date: {{ isotime }}",

    "source_ami_product_code": "aw0evgkw8e5c1q413zgy5pjce",
    "source_ami_owner": "aws-marketplace",
    "source_ami_ssh_user": "centos",

    "http_proxy": "",
    "https_proxy": "",
    "no_proxy": "",

    "hardening": "none",
    "kms_key_id": "",

    "vpc_id": "",
    "subnet_id": ""
  },

  "builders": [
    {
      "type": "amazon-ebs",
      "region": "{{user `aws_region`}}",
      "source_ami_filter": {
        "filters": {
          "product-code": "{{user `source_ami_product_code`}}",
          "root-device-type": "ebs",
          "state": "available",
          "virtualization-type": "hvm",
          "architecture": "x86_64"
        },
        "owners": [ "{{user `source_ami_owner`}}" ],
        "most_recent": true
      },
      "instance_type": "m5n.large",
      "ssh_username": "{{user `source_ami_ssh_user`}}",
      "ssh_pty": true,
      "subnet_id": "{{user `subnet_id`}}",
      "encrypt_boot": true,
      "kms_key_id": "{{user `kms_key_id`}}",
      "launch_block_device_mappings": [
        {
          "device_name": "/dev/sda1",
          "volume_size": 25,
          "volume_type": "gp2",
          "encrypted": true,
          "kms_key_id": "{{user `kms_key_id`}}",
          "delete_on_termination": true
        },
        {
          "device_name": "/dev/sdb",
          "volume_size": 25,
          "volume_type": "gp2",
          "encrypted": true,
          "kms_key_id": "{{user `kms_key_id`}}",
          "delete_on_termination": true
        }
      ],
      "ami_block_device_mappings": [
        {
          "device_name": "/dev/sdb",
          "volume_size": 25,
          "volume_type": "gp2",
          "delete_on_termination": true
        }
      ],
      "tags": {
        "Name": "eks-{{user `ami_name`}}-{{user `hardening`}}-{{ timestamp }}",
        "BuildDate": "{{ isotime }}",
        "Kubernetes-Version": "{{user `k8s_version`}}",
        "Kubernetes-BuildDate": "{{user `k8s_build_date`}}",
        "CNI-Version": "{{user `cni_version`}}",
        "CNI-Plugin-Version": "{{user `cni_plugin_version`}}",
        "Hardening": "{{user `hardening`}}"
      },
      "ami_name": "eks-{{user `ami_name`}}-{{user `hardening`}}-{{ timestamp }}",
      "ami_description": "{{user `ami_description` }}",
      "ami_virtualization_type": "hvm",
      "run_tags": {
        "Name": "packer-builder-eks-{{user `ami_name`}}-{{user `hardening`}}-ami"
      }
    }
  ],

  "provisioners": [
    {
      "type": "shell",
      "inline": "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 5; done",
      "environment_vars": [
        "http_proxy={{user `http_proxy` }}",
        "https_proxy={{user `https_proxy` }}",
        "no_proxy={{user `no_proxy` }}",
        "HTTP_PROXY={{user `http_proxy` }}",
        "HTTPS_PROXY={{user `https_proxy` }}",
        "NO_PROXY={{user `no_proxy` }}"
      ]
    },
    {
      "type": "shell",
      "inline": "sudo lsblk",
      "environment_vars": [
        "http_proxy={{user `http_proxy` }}",
        "https_proxy={{user `https_proxy` }}",
        "no_proxy={{user `no_proxy` }}",
        "HTTP_PROXY={{user `http_proxy` }}",
        "HTTPS_PROXY={{user `https_proxy` }}",
        "NO_PROXY={{user `no_proxy` }}"
      ]
    },
    {
      "type": "shell",
      "inline": "sudo yum install -y python3",
      "environment_vars": [
        "http_proxy={{user `http_proxy` }}",
        "https_proxy={{user `https_proxy` }}",
        "no_proxy={{user `no_proxy` }}",
        "HTTP_PROXY={{user `http_proxy` }}",
        "HTTPS_PROXY={{user `https_proxy` }}",
        "NO_PROXY={{user `no_proxy` }}"
      ]
    },
    {
      "type": "ansible",
      "playbook_file": "../ansible/eks.yml",
      "user": "{{user `source_ami_ssh_user`}}",
      "extra_arguments": [
        "--become",
        "--become-method=sudo",
        "--become-user=root",
        "--extra-vars",
        "ansible_python_interpreter=/usr/bin/python aws_region={{user `aws_region`}} k8s_version={{user `k8s_version`}} k8s_build_date={{user `k8s_build_date`}} cni_version={{user `cni_version`}} cni_plugin_version={{user `cni_plugin_version`}} hardening={{user `hardening`}} http_proxy={{user `http_proxy` }} https_proxy={{user `https_proxy` }} no_proxy={{user `no_proxy` }} cis_benchmark={{user `cis_benchmark`}}"
      ]
    }
  ]
}
